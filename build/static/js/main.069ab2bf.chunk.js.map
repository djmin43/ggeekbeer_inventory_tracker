{"version":3,"sources":["components/Navbar.tsx","DataContext.tsx","components/inventory/InventoryTable.tsx","components/inventory/InventoryEvents.tsx","components/inventory/InventorySelected.tsx","components/inventory/InventoryEdit.tsx","components/inventory/InventoryDetail.tsx","components/inventory/Inventory.tsx","components/event/Event.tsx","components/AddInventory.tsx","components/auth/Login.tsx","components/auth/Signup.tsx","components/auth/Auth.tsx","components/UseInventory.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","to","TodayContext","React","createContext","InventoryContext","GetInventoryContext","EventContext","GetEventContext","DataProvider","children","today","moment","format","useState","id","inventory_name","inventory_type","inventory_amount","expiration_date","import_date","inventory_desc","events","inventoryInfo","setInventoryInfo","eventInfo","setEventInfo","getInventoryInfo","a","axios","get","res","data","forEach","item","event_date","console","log","getEventInfo","Provider","value","InventoryTable","useContext","map","index","InventoryEvents","selectIndex","event_type","event_amount","event_desc","InventorySelected","InventoryEdit","editInventory","setEditInventory","handleChange","e","preventDefault","target","name","handleSubmit","post","prev","edit","postEvent","patch","patchInventory","useEffect","inventory_id","user_id","eventAmount","calEventAmount","onSubmit","type","onChange","InventoryDetail","setSelectIndex","editing","setEditing","onClick","Inventory","Event","inventory","user","user_name","AddInventory","newInventory","setNewInventory","className","Login","userId","password","login","setLogin","authLogin","Signup","Auth","UseInventory","getInventory","useInventory","setUseInventory","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069ab2bf.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nconst Navbar = () => {\n\n    return (\n        <div>\n\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/auth\">Auth</Link>\n                </li>\n                <li>\n                    <Link to=\"/inventory\">재고</Link>\n                </li>\n\n                <li>\n                    <Link to=\"/event\">이벤트 로그</Link>\n                </li>\n                <li>\n                    <Link to=\"/add\">재료추가</Link>\n                </li>\n                <li>\n                    <Link to=\"/use\">재료사용</Link>\n                </li>\n            </ul>\n  \n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { useContext, useState } from 'react'\nimport moment from 'moment'\nimport axios from 'axios'\n\nexport const TodayContext = React.createContext<string>('')\nexport const InventoryContext = React.createContext<any>('')\nexport const GetInventoryContext = React.createContext<any>('')\nexport const EventContext = React.createContext<any>('')\nexport const GetEventContext = React.createContext<any>('')\n\n\nexport const DataProvider = ({children}:any) => {\n\n    const today: string = moment().format('YYYY-MM-DD');\n    const [inventoryInfo, setInventoryInfo] = useState<any>([{\n        id: 0,\n        inventory_name: '',\n        inventory_type: '',\n        inventory_amount: 0,\n        expiration_date: today,\n        import_date: today,\n        inventory_desc: '',\n        events: []\n    }])\n    const [eventInfo, setEventInfo] = useState<any>([])\n\n    const getInventoryInfo = async (): Promise<any> => {\n        try {\n            const res = await axios.get('/inventory/')\n            const inventoryInfo = await res.data\n            await inventoryInfo.forEach((item:any) => {\n                item.expiration_date = moment().format('YYYY-MM-DD')\n                item.import_date = moment().format('YYYY-MM-DD')\n                item.events.forEach((item:any) => {\n                    item.event_date = moment().format('YYYY-MM-DD')\n                })\n                }\n            )\n            await setInventoryInfo(inventoryInfo)\n        } catch(error) {\n            console.log(error)\n        }\n    };\n\n    const getEventInfo = async (): Promise<any> => {\n        try {\n            const res = await axios.get('/event/')\n            const eventInfo = await res.data\n            await eventInfo.forEach((item: any) => {\n                item.event_date = moment().format('YYYY-MM-DD')\n            })\n            await setEventInfo(eventInfo)\n        } catch(error) {\n            console.log(error)\n        }\n      };\n\n    return (\n        <TodayContext.Provider value={today}>\n            <InventoryContext.Provider value={inventoryInfo}>\n            <GetInventoryContext.Provider value={getInventoryInfo}>\n                        <EventContext.Provider value={eventInfo}>\n                        <GetEventContext.Provider value={getEventInfo}>\n                                    {children}\n                        </GetEventContext.Provider>\n                        </EventContext.Provider>\n            </GetInventoryContext.Provider>\n            </InventoryContext.Provider>\n        </TodayContext.Provider>\n\n    )\n}\n\n","import React, { useContext } from 'react'\nimport { InventoryContext } from '../../DataContext'\n\n\nconst InventoryTable = () => {\n\n    const inventoryInfo = useContext(InventoryContext)\n\n    return (\n        <div>\n            <h1>재료테이블</h1>\n            <table>\n            {/* Table Header */}\n            <thead>\n                <tr>\n                    <th>이름</th>\n                    <th>재고</th>\n                    <th>타입</th>\n                    <th>유통기한</th>\n                    <th>비고</th>\n                </tr>\n            </thead>\n            {/* Table Information */}\n            <tbody>\n                {inventoryInfo.map((item:any, index: number) => \n                <tr key={index} >\n                    <td >{item.inventory_name}</td>\n                    <td >{item.inventory_amount}</td>\n                    <td >{item.inventory_type}</td>\n                    <td >{item.expiration_date}</td>\n                    <td >{item.inventory_desc}</td>\n\n                </tr>\n                )}\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default InventoryTable\n","import React, {useContext} from 'react'\nimport { InventoryContext } from '../../DataContext'\n\nconst InventoryEvents = ({selectIndex}:any) => {\n    const inventoryInfo = useContext(InventoryContext)\n\n    return (\n        <div>\n            {/* TABLE#2 - events */}\n            <table>\n                <thead>\n                    <tr>\n                        <th>이벤트타입</th>\n                        <th>양</th>\n                        <th>날짜</th>\n                        <th>비고</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {inventoryInfo[selectIndex].events.map((item:any, index:number) => \n                    <tr key={index}>\n                        <td>{item.event_type}</td>\n                        <td>{item.event_amount}</td>\n                        <td>{item.event_date}</td>\n                        <td>{item.event_desc}</td>\n                    </tr>\n                    )}\n                </tbody>\n            </table>\n    \n        </div>\n    )\n}\n\nexport default InventoryEvents\n","import React, {useState, useContext} from 'react'\nimport { InventoryContext } from '../../DataContext'\n\nconst InventorySelected = ({selectIndex}:any) => {\n\n    const inventoryInfo = useContext(InventoryContext)\n\n    return (\n        <div>\n \n            <table>\n                <thead>\n                    <tr>\n                        <th>재료이름: </th>\n                        <th>재료양: </th>\n                        <th>유통기한: </th>\n                        <th>재료설명: </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{inventoryInfo[selectIndex].inventory_name}</td>\n                        <td>{inventoryInfo[selectIndex].inventory_amount}</td>\n                        <td>{inventoryInfo[selectIndex].expiration_date}</td>\n                        <td>{inventoryInfo[selectIndex].inventory_desc}</td>\n                    </tr>\n                </tbody>\n            </table> \n        \n        </div>\n    )\n}\n\nexport default InventorySelected\n","import React, {useContext, useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { InventoryContext, TodayContext } from '../../DataContext'\n\nconst InventoryEdit = ({selectIndex}: any) => {\n\n    const inventoryInfo = useContext(InventoryContext)\n    const today = useContext(TodayContext)\n    const [editInventory, setEditInventory] = useState<any>({})\n\n    const handleChange = (e:any) => {\n        e.preventDefault()\n        setEditInventory({...editInventory, \n        [e.target.name]: e.target.value})\n    }\n\n    // API CALL\n    const handleSubmit = async (e:any) => {\n        e.preventDefault()\n        try {\n            const postEvent = await axios.post('/event/edit', {prev: inventoryInfo[selectIndex], edit: editInventory})\n            const patchInventory = await axios.patch('/inventory/edit', editInventory)\n            console.log(patchInventory)\n            console.log(postEvent)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    // Event Amount Calculation\n    const calEventAmount = () => {\n        const eventAmount =  +editInventory.inventory_amount - +inventoryInfo[selectIndex].inventory_amount\n        setEditInventory({...editInventory, event_amount: +eventAmount})\n    }\n\n    // Setting up state data for editing.\n    useEffect(() => {\n        const {id, inventory_name, inventory_type, inventory_amount, expiration_date, import_date, inventory_desc} = inventoryInfo[selectIndex]\n        setEditInventory({...editInventory,\n            inventory_id: id,\n            inventory_name: inventory_name,\n            inventory_type: inventory_type,\n            inventory_amount: inventory_amount,\n            expiration_date: expiration_date,\n            import_date: import_date,\n            inventory_desc: inventory_desc,\n            event_type: '내용수정',\n            event_date: today,\n            user_id: 1,\n            })\n    }, [selectIndex])\n\n    useEffect(() => {\n        calEventAmount()\n    }, [editInventory.inventory_amount])\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n            <label>수정이유:\n                    <input name=\"event_desc\" type=\"textarea\" value={editInventory.event_desc} onChange={handleChange}></input>\n                </label>\n                <label>재고이름:\n                    <input name=\"inventory_name\" type=\"text\" value={editInventory.inventory_name} onChange={handleChange}></input>\n                </label>\n                <label>양:\n                    <input name=\"inventory_amount\" type=\"number\" value={editInventory.inventory_amount} onChange={handleChange}></input>\n                </label>\n                <label>타입:\n                    <input name=\"inventory_type\" type=\"text\" value={editInventory.inventory_type} onChange={handleChange}></input>\n                </label>\n                <label>유통기한:\n                    <input name=\"expiration_date\" type=\"date\" value={editInventory.expiration_date} onChange={handleChange}></input>\n                </label>\n                <label>설명:\n                    <input name=\"inventory_desc\" type=\"textarea\" value={editInventory.inventory_desc} onChange={handleChange}></input>\n                </label>\n                <label>입고날짜:\n                    <input name=\"import_date\" type=\"date\" value={editInventory.import_date} onChange={handleChange}></input>\n                </label>\n                <button>확인</button>\n            </form>\n        </div>\n    )\n}\n\nexport default InventoryEdit\n","import React, { useState, useContext } from 'react'\nimport { TodayContext, InventoryContext } from '../../DataContext'\nimport InventorySelcted from './InventorySelected'\nimport InventoryEvents from './InventoryEvents'\nimport InventorySelected from './InventorySelected'\nimport InventoryEdit from './InventoryEdit'\n\n\nconst InventoryDetail = () => {\n    const inventoryInfo = useContext(InventoryContext)\n    const today = useContext(TodayContext)\n\n    const [selectIndex, setSelectIndex] = useState<number>(0)\n    const [editing, setEditing] = useState<boolean>(false)\n\n    const handleChange = (e: any) => {\n        e.preventDefault()\n        setSelectIndex(e.target.value)\n    }\n\n    return (\n        <div>\n            <h1>재료정보</h1>\n            <select onChange={handleChange}>\n                <option value=\"0\">원하시는 재고를 고르세요.</option>\n                {inventoryInfo.map((item:any, index: number) => \n                    <option key={index} value={index}>{item.inventory_name}</option>\n                )}\n            </select>\n\n\n            {/* TABLES for Selected Inventory */}\n            <div>\n                {editing === false ? <>\n                <InventorySelected selectIndex={selectIndex}/>\n                <InventoryEvents selectIndex={selectIndex} /> </> :\n                <InventoryEdit selectIndex={selectIndex} setEditing={setEditing}/>\n\n                }\n\n                <button onClick={() => setEditing(!editing)}>Edit</button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default InventoryDetail\n","import React, { useState, useEffect, useContext } from 'react';\nimport { InventoryContext, GetInventoryContext, TodayContext, } from '../../DataContext';\nimport InventoryTable from './InventoryTable'\nimport InventoryDetail from './InventoryDetail'\n\n// {inventoryInfo, getInventoryInfo,\nconst Inventory = () => {\n    const inventoryInfo = useContext(InventoryContext)\n    const getInventoryInfo = useContext(GetInventoryContext)\n    const today = useContext(TodayContext)\n\n    useEffect( () => {\n        getInventoryInfo()\n        console.log(inventoryInfo)\n    }, [])\n\n    return (\n        <div>\n            <h1>Inventory Table</h1>\n            <InventoryDetail />\n            <InventoryTable />\n        </div>\n    )\n}\n\nexport default Inventory\n\n","import React, { useEffect, useContext } from 'react'\nimport { EventContext, GetEventContext } from '../../DataContext'\n\nconst Event = () => {\n    const eventInfo = useContext(EventContext)\n    const getEventInfo = useContext(GetEventContext)\n\n    useEffect(() => {\n        getEventInfo()\n        console.log(eventInfo)\n    }, [])\n\n    // This is where I need join table for the event.\n    return (\n        <div>\n            <h1>이벤트로그</h1>\n        <table>\n            {/* Table Header */}\n            <thead>\n            <tr>\n                <th>용도</th>\n                <th>양</th>\n                <th>내용</th>\n                <th>날짜</th>\n                <th>재고이름</th>\n                <th>재고타입</th>\n                <th>사용자</th>\n\n            </tr>\n            </thead>\n \n            {/* Table Information */}\n            <tbody>\n            {eventInfo.map((item:any, index: number) => \n            <tr key={index} >\n                <td >{item.event_type}</td>\n                <td >{item.event_amount}</td>\n                <td >{item.event_desc}</td>\n                <td >{item.event_date}</td>\n                <td >{item.inventory.inventory_name}</td>\n                <td >{item.inventory.inventory_type}</td>\n                <td >{item.user.user_name}</td>\n\n            </tr>\n            )}\n            </tbody>\n\n\n        </table>\n    </div>\n    )\n}\n\nexport default Event\n","import React, {useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { TodayContext } from '../DataContext'\nimport '../App.css';\n\nconst AddInventory = () => {\n\n    const today = useContext(TodayContext)\n\n    const [newInventory, setNewInventory] = useState({\n        inventory_name: '',\n        inventory_type: '',\n        inventory_amount: 0,\n        expiration_date: today,\n        import_date: today,\n        inventory_desc: '',\n        event_desc: '',\n        user_id: 1,\n        event_type: '재료추가',\n        today\n    })\n\n    // Submit Control\n    const handleChange = (e: any) => {\n        e.preventDefault()\n        setNewInventory({...newInventory, \n        [e.target.name]: e.target.value\n        })\n    }\n    const handleSubmit = async () => {\n        try {\n            const postInventory = await axios.post('/inventory/new', newInventory)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n            <h2>재고추가</h2>\n            <form onSubmit={handleSubmit}>\n                <label>이름:\n                    <input type=\"text\" name=\"inventory_name\" value={newInventory.inventory_name} onChange={handleChange}></input>\n                </label>\n                <select name=\"inventory_type\" onChange={handleChange}>타입:\n                    <option>재료타입을 선택해주세요</option>\n                    <option>홉</option>\n                    <option>몰트</option>\n                    <option>이스트</option>\n                    <option>부재료</option>\n                </select>\n                <label>양:\n                    <input type=\"number\" name=\"inventory_amount\" value={newInventory.inventory_amount} onChange={handleChange}></input>\n                </label>\n                <label>유통기한:\n                    <input type=\"date\" name=\"expiration_date\" value={newInventory.expiration_date} onChange={handleChange}></input>\n                </label>\n                <label>입고날짜:\n                    <input type=\"date\" name=\"import_date\" value={newInventory.import_date} onChange={handleChange}></input>\n                </label>\n                <label>재료설명:\n                    <input type=\"text\" name=\"inventory_desc\" value={newInventory.inventory_desc} onChange={handleChange}></input>\n                </label>\n                <label>추가 특이사항:\n                    <input type=\"text\" name=\"event_desc\" value={newInventory.event_desc} onChange={handleChange}></input>\n                </label>\n                <button>재료추가</button>\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddInventory\n","import React, {useState} from 'react'\nimport axios from 'axios'\n\ninterface Login {\n    userId: string;\n    password: string;\n}\n\nconst Login = () => {\n    const [login, setLogin] = useState<Login>({userId: '', password: ''})\n\n    const handleChange = (e: any) => {\n        e.preventDefault()\n        setLogin({...login, \n        [e.target.name]: e.target.value})\n    }\n\n    const handleSubmit = async (e:any) => {\n        e.preventDefault()\n        try {\n            const authLogin = await axios.post('/auth/log_in', login)\n            console.log(authLogin)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>User Name:\n                    <input type=\"text\" name=\"userId\" onChange={handleChange}></input>\n                </label>\n                <label>Password:\n                    <input type=\"password\" name=\"password\" onChange={handleChange}></input>\n                </label>\n                <button>LOG IN</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\n\nconst Signup = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Signup\n","import React from 'react'\nimport Login from './Login'\nimport Signup from './Signup'\n\nconst Auth = () => {\n    return (\n        <div>\n            <Login />\n            <Signup />\n        </div>\n    )\n}\n\nexport default Auth\n","import React, {useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { GetInventoryContext, InventoryContext, TodayContext } from '../DataContext'\nimport '../App.css';\n\nconst UseInventory = () => {\n\n    const today = useContext(TodayContext)\n    const inventoryInfo = useContext(InventoryContext)\n    const getInventory = useContext(GetInventoryContext)\n\n    const [useInventory, setUseInventory] = useState<any>({\n        inventory_id: null,\n        inventory_amount: 0,\n        event_amount: 0,\n        event_desc: '',\n        event_type: '재고사용',\n        event_date: today,\n        user_id: 1,\n        today\n    })\n\n    const handleChange = (e: any) => {\n        e.preventDefault()\n        setUseInventory({\n            ...useInventory,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // 선택한 인벤토리를 useInventory에 넣습니다. (로직이 조금 달라서 따로 handle해야함).\n    const handleSelect = (e: any) => {\n        e.preventDefault()\n        setUseInventory({\n            ...useInventory,\n            inventory_id: inventoryInfo[e.target.value].id,\n            inventory_amount: inventoryInfo[e.target.value].inventory_amount\n        })\n    }\n\n    const handleSubmit = async (e: any) => {\n        e.preventDefault()\n        try {\n            const patchInventory = await axios.patch('/inventory/use', useInventory)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getInventory()\n    }, [])\n\n    return (\n        <div >\n                <div className=\"container\">\n                <h2>재고사용</h2>\n                    <form onSubmit={handleSubmit}>\n                        <select name=\"inventory_id\" onChange={handleSelect}>사용재고 선택:\n                            <option>재고 선택해주세요.</option>\n                            {inventoryInfo.map((item: any, index: number) => \n                                <option key={index} value={index}>{item.inventory_name} {item.inventory_amount}</option>\n                            )}\n                        </select>\n                        <label>사용양(kg):\n                            <input type=\"number\" name=\"event_amount\" value={useInventory.event_amount} onChange={handleChange}></input>\n                        </label>\n                        <label>재고사용 요약:\n                            <input type=\"text\" name=\"event_desc\" value={useInventory.event_desc} onChange={handleChange}></input>\n                        </label>\n                        <label>사용날짜:\n                            <input type=\"date\" name=\"event_date\" value={useInventory.event_date} onChange={handleChange}></input>\n                        </label>\n                        <button>재고사용</button>\n                    </form>\n                </div>\n        </div>\n    )\n}\n\nexport default UseInventory\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Inventory from './components/inventory/Inventory'\nimport Event from './components/event/Event'\nimport AddInventory from './components/AddInventory'\nimport Auth from './components/auth/Auth'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { DataProvider } from './DataContext'\nimport UseInventory from './components/UseInventory';\n\n\nfunction App() {\n  return (\n    <DataProvider>\n    <Router >\n      <h1 className=\"Header\">Ggeek Inventory Tracker</h1>\n      <Navbar />\n\n    <Switch>\n      <Route exact path=\"/auth\">\n          <Auth />\n        </Route>\n        <Route exact path=\"/inventory\">\n          <Inventory />\n        </Route>\n        <Route exact path=\"/event\">\n          <Event />\n        </Route>\n        <Route exact path=\"/add\">\n          <AddInventory />\n        </Route>\n        <Route exact path=\"/use\">\n          <UseInventory />\n        </Route>\n    </Switch>\n    </Router>\n    </DataProvider>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}